@using CarRepairGarage.Web.ViewModels.Appointment;
@model IEnumerable<AppointmentDetailsViewModel>;

@{
    ViewData["Title"] = "Garage Appointments Page";
}

@if (Model.Count() < 1)
{
    <p>Your do not have any appointments!</p>
}
<div class="container">
    <div class="row">
        @foreach (var appointment in Model)
        {
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-body">
                        <p>Garage: <b>@appointment.GarageName</b></p>
                        <p>Service: <b>@appointment.ServiceName</b></p>
                        <p>Date: <b>@appointment.SelectedDate</b></p>
                        <p>Time: <b>@appointment.SelectedTime</b></p>
                        @if (appointment.IsApproved == null)
                        {
                            <p>Status: <b style="color: yellow;">Pending</b></p>
                        }
                        else if (appointment.IsApproved == true)
                        {
                            <p>Status: <b style="color: green;">Approved</b></p>
                        }
                        else
                        {
                            <p>Status: <b style="color: red;">Rejected</b></p>
                        }
                        <a asp-area="Manager" asp-controller="Appointment" asp-action="Approve" asp-route-id="@appointment.Id" class="btn btn-success">Approve</a>
                        <a asp-area="Manager" asp-controller="Appointment" asp-action="Reject" asp-route-id="@appointment.Id" class="btn btn-warning" onclick="return confirmReject()">Reject</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    function confirmReject() {
        return confirm("Are you sure you want to reject this Appointment?");
    }
</script>